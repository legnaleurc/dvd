services:
  unpack:
    build:
      context: ./unpack
      target: production
    volumes:
      - binary:/mnt/binary:rw
    cap_drop:
      - ALL
    command: sh -c "cp /app/unpack /mnt/binary"
  engine:
    build:
      context: ./engine
      target: production
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - binary:/mnt/binary:ro
      - static:/mnt/static:ro
      - ${DVD_DRIVE_FILE}:/mnt/drive.yaml
      - ${DVD_CONFIG_DIR}:/mnt/config:ro
      - ${DVD_DATA_DIR}:/mnt/data:rw
      - ${DVD_TMP_DIR}:/mnt/tmp:rw
    environment:
      POETRY_CONFIG_DIR: /tmp
      POETRY_CACHE_DIR: /tmp
      DVD_ENGINE_PORT: "80"
      DVD_ENGINE_UNPACK: /mnt/binary/unpack
      DVD_ENGINE_DRIVE: /mnt/drive.yaml
      DVD_ENGINE_TMP: /mnt/tmp
      DVD_ENGINE_TOKEN: ${DVD_TOKEN}
      DVD_ENGINE_UID: ${DVD_UID}
      DVD_ENGINE_GID: ${DVD_GID}
    expose:
      - "80"
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
    logging:
      driver: "syslog"
      options:
        tag: "dvd-engine"
    command: /app/docker/start.sh
  viewer:
    build:
      context: ./viewer
      target: production
    volumes:
      - static:/mnt/static:rw
    cap_drop:
      - ALL
    command: sh -c "cp -R /app/* /mnt/static"
  nginx:
    image: nginx:stable-bookworm
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./docker/nginx:/etc/nginx/conf.d:ro
      - static:/mnt/static:ro
    ports:
      - "${DVD_HOST}:${DVD_PORT}:80"
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    logging:
      driver: "syslog"
      options:
        tag: "dvd-nginx"
volumes:
  binary:
  static:
