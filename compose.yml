services:
  unpack:
    build:
      context: ./unpack
      target: production
    volumes:
      - binary:/mnt/binary:rw
    cap_drop:
      - ALL
    command: sh -c "cp /app/unpack /mnt/binary"
  engine:
    build:
      context: ./engine
      target: production
    volumes:
      - binary:/mnt/binary:ro
      - static:/mnt/static:ro
      - poetry:/mnt/poetry:rw
      - ${DVD_CONFIG_DIR}:/mnt/config:ro
      - ${DVD_DATA_DIR}:/mnt/data:rw
      - ${DVD_TMP_DIR}:/tmp:rw
    environment:
      - TZ=${DVD_TZ}
      - POETRY_CONFIG_DIR=/mnt/poetry
      - POETRY_CACHE_DIR=/mnt/poetry
      - DVD_ENGINE_PORT=80
      - DVD_ENGINE_UNPACK=/mnt/binary/unpack
      - DVD_ENGINE_DRIVE=/mnt/config/${DVD_DRIVE_FILE}
      - DVD_ENGINE_TOKEN=${DVD_TOKEN}
      - DVD_ENGINE_UID=${DVD_UID}
      - DVD_ENGINE_GID=${DVD_GID}
    expose:
      - 80
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
    command: /app/docker/start.sh
  viewer:
    build:
      context: ./viewer
      target: production
    volumes:
      - static:/mnt/static:rw
    cap_drop:
      - ALL
    command: sh -c "cp -R /app/* /mnt/static"
  nginx:
    image: nginx:1.25.4-bookworm
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d:ro
      - static:/mnt/static:ro
    environment:
      - TZ=${DVD_TZ}
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
    ports:
      - "${DVD_PORT}:80"
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
volumes:
  binary:
  static:
  poetry:
